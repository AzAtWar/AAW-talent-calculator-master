{"ast":null,"code":"import React,{createContext,useReducer,useContext}from\"react\";import{isTalentUnlocked,isTalentMaxed,getPointsLeft,getTalentRank,getTalentDependents}from\"./selectors\";import{makeReducer}from\"./reducer\";const createInitialState=data=>Object.entries(data).reduce((prev,_ref)=>{let[treeName,tree]=_ref;prev[treeName]=Object.keys(tree.talents).reduce((prev,talentName)=>{prev[talentName]=0;return prev;},{});return prev;},{});const TalentContext=/*#__PURE__*/createContext(null);export const createTalentProvider=data=>{const initialState=createInitialState(data);return _ref2=>{let{children}=_ref2;const[state,dispatch]=useReducer(makeReducer(initialState),initialState);const spendPoint=(tree,talent)=>{const pointsLeft=getPointsLeft(state);const unlocked=isTalentUnlocked(state,data,tree,talent);const maxed=isTalentMaxed(state,data,tree,talent);if(unlocked&&!maxed&&pointsLeft>0){dispatch({type:\"POINT_SPENT\",tree,talent});}};const unspendPoint=(tree,talent)=>{const rank=getTalentRank(state,tree,talent);const dependents=getTalentDependents(state,data,tree,talent);if(dependents.length===0&&rank>0){dispatch({type:\"POINT_UNSPENT\",tree,talent});}};const resetTree=tree=>{dispatch({type:\"TREE_RESET\",tree});};const resetAll=()=>{dispatch({type:\"ALL_RESET\"});};const restoreState=newState=>{dispatch({type:\"STATE_RESTORED\",newState});};const value={state,data,spendPoint,unspendPoint,resetTree,resetAll,restoreState};return/*#__PURE__*/React.createElement(TalentContext.Provider,{value:value},children);};};export const useTalentContext=()=>{const context=useContext(TalentContext);if(context===null){throw new Error(\"Components using useTalentContext must be children of TalentContextProvider\");}return context;};","map":{"version":3,"names":["React","createContext","useReducer","useContext","isTalentUnlocked","isTalentMaxed","getPointsLeft","getTalentRank","getTalentDependents","makeReducer","createInitialState","data","Object","entries","reduce","prev","_ref","treeName","tree","keys","talents","talentName","TalentContext","createTalentProvider","initialState","_ref2","children","state","dispatch","spendPoint","talent","pointsLeft","unlocked","maxed","type","unspendPoint","rank","dependents","length","resetTree","resetAll","restoreState","newState","value","createElement","Provider","useTalentContext","context","Error"],"sources":["D:/Warcraft/AAW-Talent-Calculator-master/src/TalentContext/TalentContext.tsx"],"sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\r\n\r\nimport { State, TalentData } from \"./types\";\r\nimport {\r\n  isTalentUnlocked,\r\n  isTalentMaxed,\r\n  getPointsLeft,\r\n  getTalentRank,\r\n  getTalentDependents,\r\n} from \"./selectors\";\r\nimport { makeReducer } from \"./reducer\";\r\n\r\nconst createInitialState = (data: TalentData) =>\r\n  Object.entries(data).reduce<State>((prev, [treeName, tree]) => {\r\n    prev[treeName] = Object.keys(tree.talents).reduce<Record<string, number>>(\r\n      (prev, talentName) => {\r\n        prev[talentName] = 0;\r\n        return prev;\r\n      },\r\n      {},\r\n    );\r\n    return prev;\r\n  }, {});\r\n\r\nconst TalentContext = createContext<{\r\n  state: State;\r\n  data: TalentData;\r\n  spendPoint: (tree: string, talent: string) => void;\r\n  unspendPoint: (tree: string, talent: string) => void;\r\n  resetTree: (tree: string) => void;\r\n  resetAll: () => void;\r\n  restoreState: (newState: State) => void;\r\n} | null>(null);\r\n\r\nexport const createTalentProvider = (data: TalentData): React.FC => {\r\n  const initialState = createInitialState(data);\r\n\r\n  return ({ children }) => {\r\n    const [state, dispatch] = useReducer(\r\n      makeReducer(initialState),\r\n      initialState,\r\n    );\r\n\r\n    const spendPoint = (tree: string, talent: string) => {\r\n      const pointsLeft = getPointsLeft(state);\r\n      const unlocked = isTalentUnlocked(state, data, tree, talent);\r\n      const maxed = isTalentMaxed(state, data, tree, talent);\r\n\r\n      if (unlocked && !maxed && pointsLeft > 0) {\r\n        dispatch({ type: \"POINT_SPENT\", tree, talent });\r\n      }\r\n    };\r\n\r\n    const unspendPoint = (tree: string, talent: string) => {\r\n      const rank = getTalentRank(state, tree, talent);\r\n      const dependents = getTalentDependents(state, data, tree, talent);\r\n\r\n      if (dependents.length === 0 && rank > 0) {\r\n        dispatch({\r\n          type: \"POINT_UNSPENT\",\r\n          tree,\r\n          talent,\r\n        });\r\n      }\r\n    };\r\n\r\n    const resetTree = (tree: string) => {\r\n      dispatch({ type: \"TREE_RESET\", tree });\r\n    };\r\n\r\n    const resetAll = () => {\r\n      dispatch({ type: \"ALL_RESET\" });\r\n    };\r\n\r\n    const restoreState = (newState: State) => {\r\n      dispatch({ type: \"STATE_RESTORED\", newState });\r\n    };\r\n\r\n    const value = {\r\n      state,\r\n      data,\r\n      spendPoint,\r\n      unspendPoint,\r\n      resetTree,\r\n      resetAll,\r\n      restoreState,\r\n    };\r\n\r\n    return (\r\n      <TalentContext.Provider value={value}>{children}</TalentContext.Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport const useTalentContext = () => {\r\n  const context = useContext(TalentContext);\r\n\r\n  if (context === null) {\r\n    throw new Error(\r\n      \"Components using useTalentContext must be children of TalentContextProvider\",\r\n    );\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}