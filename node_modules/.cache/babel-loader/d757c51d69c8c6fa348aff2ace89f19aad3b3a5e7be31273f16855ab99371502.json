{"ast":null,"code":"import _slicedToArray from\"D:/Warcraft/AAW-Talent-Calculator-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{config}from\"../config\";export var getTalentRank=function getTalentRank(state,tree,talent){return state[tree][talent];};export var getTalentData=function getTalentData(data,tree,talent){return data[tree].talents[talent];};var getTreeTalents=function getTreeTalents(data,tree){return data[tree].talents;};export var getTreeData=function getTreeData(data,tree){return data[tree];};export var getTreePointsSpent=function getTreePointsSpent(state,tree){var ranks=Object.values(state[tree]);return ranks.reduce(function(prev,rank){return prev+rank;},0);};export var getPointsSpent=function getPointsSpent(state){var treeNames=Object.keys(state);return treeNames.reduce(function(prev,treeName){return prev+getTreePointsSpent(state,treeName);},0);};export var getPointsLeft=function getPointsLeft(state){return config.TOTAL_POINTS-getPointsSpent(state);};export var isTalentMaxed=function isTalentMaxed(state,data,tree,talent){var talentRank=getTalentRank(state,tree,talent);var talentData=getTalentData(data,tree,talent);return talentRank===talentData.maxRank;};export var areReqPointsMet=function areReqPointsMet(state,data,tree,talent){var treePointsSpent=getTreePointsSpent(state,tree);var talentData=getTalentData(data,tree,talent);return treePointsSpent>=talentData.reqPoints;};export var isPrereqMet=function isPrereqMet(state,data,tree,talent){var talentData=getTalentData(data,tree,talent);if(talentData.prereq){return isTalentMaxed(state,data,tree,talentData.prereq);}// TODO: returns true if there is no prereq, could cause problems\nreturn true;};// todo: doesn't consider if there are any remaining points\nexport var isTalentUnlocked=function isTalentUnlocked(state,data,tree,talent){var prereqMet=isPrereqMet(state,data,tree,talent);var reqPointsMet=areReqPointsMet(state,data,tree,talent);return prereqMet&&reqPointsMet;};var getBasePoints=function getBasePoints(state,data,tree,talent){var _getTalentData=getTalentData(data,tree,talent),reqPoints=_getTalentData.reqPoints;// get talents which require less than or equal to these points,\n// sum their ranks\nreturn Object.entries(getTreeTalents(data,tree)).reduce(function(prev,_ref){var _ref2=_slicedToArray(_ref,2),talentName=_ref2[0],talentData=_ref2[1];if(talentData.reqPoints<=reqPoints){return prev+getTalentRank(state,tree,talentName);}return prev;},0);};export var getTalentDependents=function getTalentDependents(state,data,tree,talent){var basePoints=getBasePoints(state,data,tree,talent);var treeTalents=getTreeTalents(data,tree);return Object.entries(treeTalents).reduce(function(prev,_ref3){var _ref4=_slicedToArray(_ref3,2),talentName=_ref4[0],talentData=_ref4[1];var rank=getTalentRank(state,tree,talentName);var prereq=talentData.prereq;if(talentData.reqPoints===basePoints&&rank>0){// if the talent has req equal to base points spent, therefore 1 less point and it would be illegal\nprev.push(talentName);}else if(prereq===talent&&rank>0){prev.push(talentName);}return prev;},[]);};","map":{"version":3,"names":["config","getTalentRank","state","tree","talent","getTalentData","data","talents","getTreeTalents","getTreeData","getTreePointsSpent","ranks","Object","values","reduce","prev","rank","getPointsSpent","treeNames","keys","treeName","getPointsLeft","TOTAL_POINTS","isTalentMaxed","talentRank","talentData","maxRank","areReqPointsMet","treePointsSpent","reqPoints","isPrereqMet","prereq","isTalentUnlocked","prereqMet","reqPointsMet","getBasePoints","_getTalentData","entries","_ref","_ref2","_slicedToArray","talentName","getTalentDependents","basePoints","treeTalents","_ref3","_ref4","push"],"sources":["D:/Warcraft/AAW-Talent-Calculator-master/src/TalentContext/selectors.ts"],"sourcesContent":["import { State, TalentData } from \"./types\";\r\nimport { config } from \"../config\";\r\n\r\nexport const getTalentRank = (state: State, tree: string, talent: string) => {\r\n  return state[tree][talent];\r\n};\r\n\r\nexport const getTalentData = (\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  return data[tree].talents[talent];\r\n};\r\n\r\nconst getTreeTalents = (data: TalentData, tree: string) => {\r\n  return data[tree].talents;\r\n};\r\n\r\nexport const getTreeData = (data: TalentData, tree: string) => {\r\n  return data[tree];\r\n};\r\n\r\nexport const getTreePointsSpent = (state: State, tree: string) => {\r\n  const ranks = Object.values(state[tree]);\r\n  return ranks.reduce((prev, rank) => {\r\n    return prev + rank;\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsSpent = (state: State) => {\r\n  const treeNames = Object.keys(state);\r\n  return treeNames.reduce((prev, treeName) => {\r\n    return prev + getTreePointsSpent(state, treeName);\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsLeft = (state: State) => {\r\n  return config.TOTAL_POINTS - getPointsSpent(state);\r\n};\r\n\r\nexport const isTalentMaxed = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentRank = getTalentRank(state, tree, talent);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return talentRank === talentData.maxRank;\r\n};\r\n\r\nexport const areReqPointsMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const treePointsSpent = getTreePointsSpent(state, tree);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return treePointsSpent >= talentData.reqPoints;\r\n};\r\n\r\nexport const isPrereqMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentData = getTalentData(data, tree, talent);\r\n  if (talentData.prereq) {\r\n    return isTalentMaxed(state, data, tree, talentData.prereq);\r\n  }\r\n  // TODO: returns true if there is no prereq, could cause problems\r\n  return true;\r\n};\r\n\r\n// todo: doesn't consider if there are any remaining points\r\nexport const isTalentUnlocked = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const prereqMet = isPrereqMet(state, data, tree, talent);\r\n  const reqPointsMet = areReqPointsMet(state, data, tree, talent);\r\n  return prereqMet && reqPointsMet;\r\n};\r\n\r\nconst getBasePoints = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const { reqPoints } = getTalentData(data, tree, talent);\r\n  // get talents which require less than or equal to these points,\r\n  // sum their ranks\r\n  return Object.entries(getTreeTalents(data, tree)).reduce(\r\n    (prev, [talentName, talentData]) => {\r\n      if (talentData.reqPoints <= reqPoints) {\r\n        return prev + getTalentRank(state, tree, talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    0,\r\n  );\r\n};\r\n\r\nexport const getTalentDependents = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const basePoints = getBasePoints(state, data, tree, talent);\r\n  const treeTalents = getTreeTalents(data, tree);\r\n\r\n  return Object.entries(treeTalents).reduce<string[]>(\r\n    (prev, [talentName, talentData]) => {\r\n      const rank = getTalentRank(state, tree, talentName);\r\n      const { prereq } = talentData;\r\n\r\n      if (talentData.reqPoints === basePoints && rank > 0) {\r\n        // if the talent has req equal to base points spent, therefore 1 less point and it would be illegal\r\n        prev.push(talentName);\r\n      } else if (prereq === talent && rank > 0) {\r\n        prev.push(talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    [],\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}