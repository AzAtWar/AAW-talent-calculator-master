{"ast":null,"code":"export const makeReducer=initialState=>(state,action)=>{switch(action.type){case\"POINT_SPENT\":{const{tree,talent}=action;return{...state,[tree]:{...state[tree],[talent]:state[tree][talent]+1}};}case\"POINT_UNSPENT\":{const{tree,talent}=action;return{...state,[tree]:{...state[tree],[talent]:state[tree][talent]-1}};}case\"TREE_RESET\":{const{tree}=action;return{...state,[tree]:{...initialState[tree]}};}case\"ALL_RESET\":{return{...initialState};}case\"STATE_RESTORED\":{const{newState}=action;return{...newState};}default:return state;}};","map":{"version":3,"names":["makeReducer","initialState","state","action","type","tree","talent","newState"],"sources":["D:/Warcraft/AAW-Talent-Calculator-master/src/TalentContext/reducer.ts"],"sourcesContent":["import { State, Action } from \"./types\";\r\n\r\nexport const makeReducer = (initialState: State) => (\r\n  state: State,\r\n  action: Action,\r\n): State => {\r\n  switch (action.type) {\r\n    case \"POINT_SPENT\": {\r\n      const { tree, talent } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...state[tree],\r\n          [talent]: state[tree][talent] + 1,\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"POINT_UNSPENT\": {\r\n      const { tree, talent } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...state[tree],\r\n          [talent]: state[tree][talent] - 1,\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"TREE_RESET\": {\r\n      const { tree } = action;\r\n\r\n      return {\r\n        ...state,\r\n        [tree]: {\r\n          ...initialState[tree],\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"ALL_RESET\": {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n\r\n    case \"STATE_RESTORED\": {\r\n      const { newState } = action;\r\n\r\n      return {\r\n        ...newState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAEA,MAAO,MAAM,CAAAA,WAAW,CAAIC,YAAmB,EAAK,CAClDC,KAAY,CACZC,MAAc,GACJ,CACV,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,aAAa,CAAE,CAClB,KAAM,CAAEC,IAAI,CAAEC,MAAO,CAAC,CAAGH,MAAM,CAE/B,MAAO,CACL,GAAGD,KAAK,CACR,CAACG,IAAI,EAAG,CACN,GAAGH,KAAK,CAACG,IAAI,CAAC,CACd,CAACC,MAAM,EAAGJ,KAAK,CAACG,IAAI,CAAC,CAACC,MAAM,CAAC,CAAG,CAClC,CACF,CAAC,CACH,CAEA,IAAK,eAAe,CAAE,CACpB,KAAM,CAAED,IAAI,CAAEC,MAAO,CAAC,CAAGH,MAAM,CAE/B,MAAO,CACL,GAAGD,KAAK,CACR,CAACG,IAAI,EAAG,CACN,GAAGH,KAAK,CAACG,IAAI,CAAC,CACd,CAACC,MAAM,EAAGJ,KAAK,CAACG,IAAI,CAAC,CAACC,MAAM,CAAC,CAAG,CAClC,CACF,CAAC,CACH,CAEA,IAAK,YAAY,CAAE,CACjB,KAAM,CAAED,IAAK,CAAC,CAAGF,MAAM,CAEvB,MAAO,CACL,GAAGD,KAAK,CACR,CAACG,IAAI,EAAG,CACN,GAAGJ,YAAY,CAACI,IAAI,CACtB,CACF,CAAC,CACH,CAEA,IAAK,WAAW,CAAE,CAChB,MAAO,CACL,GAAGJ,YACL,CAAC,CACH,CAEA,IAAK,gBAAgB,CAAE,CACrB,KAAM,CAAEM,QAAS,CAAC,CAAGJ,MAAM,CAE3B,MAAO,CACL,GAAGI,QACL,CAAC,CACH,CAEA,QACE,MAAO,CAAAL,KAAK,CAChB,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}