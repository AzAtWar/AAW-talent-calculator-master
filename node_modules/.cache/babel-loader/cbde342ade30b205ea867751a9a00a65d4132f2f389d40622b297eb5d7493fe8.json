{"ast":null,"code":"import{useState,useRef,useLayoutEffect}from\"react\";// TODO: should be hidden by default\nconst DEFAULT_POS=\"topRight\";export const useTooltipPos=function(){const anchorRef=useRef(null);const tooltipRef=useRef(null);const[tooltipPos,setTooltipPos]=useState(DEFAULT_POS);const[tooltipVisible,setTooltipVisible]=useState(false);for(var _len=arguments.length,deps=new Array(_len),_key=0;_key<_len;_key++){deps[_key]=arguments[_key];}useLayoutEffect(()=>{if(!tooltipVisible||!tooltipRef.current||!anchorRef.current){return;}const getPosition=()=>{if(!tooltipRef.current||!anchorRef.current){return DEFAULT_POS;}const viewportHeight=window.innerHeight;const viewportWidth=window.innerWidth;const anchorRect=anchorRef.current.getBoundingClientRect();const tooltipRect=tooltipRef.current.getBoundingClientRect();const fitsTop=anchorRect.top>=tooltipRect.height;const fitsRight=viewportWidth-anchorRect.right>=tooltipRect.width;const rightDistance=Math.abs(viewportWidth-anchorRect.right-tooltipRect.width);const fitsBottom=viewportHeight-anchorRect.bottom>=tooltipRect.height;const fitsLeft=anchorRect.left>=tooltipRect.width;const leftDistance=Math.abs(anchorRect.left-tooltipRect.width);if(fitsTop&&fitsRight){return\"topRight\";}else if(fitsTop&&fitsLeft){return\"topLeft\";}else if(fitsBottom&&fitsRight){return\"bottomRight\";}else if(rightDistance>leftDistance){return\"mobileLeft\";}else if(rightDistance<leftDistance){return\"mobileRight\";}else if(fitsBottom&&fitsLeft){return\"bottomLeft\";}else{return DEFAULT_POS;}};setTooltipPos(getPosition());},[tooltipVisible,...deps]);const showTooltip=()=>setTooltipVisible(true);const hideTooltip=()=>setTooltipVisible(false);// TODO: consider memoizing this?\nreturn{anchorProps:{ref:anchorRef,onMouseEnter:showTooltip,onMouseLeave:hideTooltip},tooltipProps:{ref:tooltipRef,position:tooltipPos},tooltipVisible};};","map":{"version":3,"names":["useState","useRef","useLayoutEffect","DEFAULT_POS","useTooltipPos","anchorRef","tooltipRef","tooltipPos","setTooltipPos","tooltipVisible","setTooltipVisible","_len","arguments","length","deps","Array","_key","current","getPosition","viewportHeight","window","innerHeight","viewportWidth","innerWidth","anchorRect","getBoundingClientRect","tooltipRect","fitsTop","top","height","fitsRight","right","width","rightDistance","Math","abs","fitsBottom","bottom","fitsLeft","left","leftDistance","showTooltip","hideTooltip","anchorProps","ref","onMouseEnter","onMouseLeave","tooltipProps","position"],"sources":["D:/Warcraft/AAW-Talent-Calculator-master/src/hooks/useTooltipPos.ts"],"sourcesContent":["import { useState, useRef, useLayoutEffect } from \"react\";\r\n\r\n// TODO: should be hidden by default\r\nconst DEFAULT_POS = \"topRight\";\r\n\r\nexport type TooltipPos = \"topRight\" | \"topLeft\" | \"bottomRight\" | \"bottomLeft\" | \"mobileRight\" | \"mobileLeft\";\r\n\r\nexport const useTooltipPos = <T extends HTMLElement, U extends HTMLElement>(\r\n  // Optional dependencies for the positioning effect.\r\n  // Useful if the content of the tooltip can change while it's visible\r\n  ...deps: any[]\r\n) => {\r\n  const anchorRef = useRef<T | null>(null);\r\n  const tooltipRef = useRef<U | null>(null);\r\n  const [tooltipPos, setTooltipPos] = useState<TooltipPos>(DEFAULT_POS);\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!tooltipVisible || !tooltipRef.current || !anchorRef.current) {\r\n      return;\r\n    }\r\n    const getPosition = (): TooltipPos => {\r\n      if (!tooltipRef.current || !anchorRef.current) {\r\n        return DEFAULT_POS;\r\n      }\r\n      const viewportHeight = window.innerHeight;\r\n      const viewportWidth = window.innerWidth;\r\n      const anchorRect = anchorRef.current.getBoundingClientRect();\r\n      const tooltipRect = tooltipRef.current.getBoundingClientRect();\r\n\r\n      const fitsTop = anchorRect.top >= tooltipRect.height;\r\n      const fitsRight = viewportWidth - anchorRect.right >= tooltipRect.width;\r\n      const rightDistance = Math.abs(viewportWidth - anchorRect.right - tooltipRect.width);\r\n      const fitsBottom =\r\n        viewportHeight - anchorRect.bottom >= tooltipRect.height;\r\n      const fitsLeft = anchorRect.left >= tooltipRect.width;\r\n      const leftDistance = Math.abs(anchorRect.left - tooltipRect.width);\r\n\r\n      if (fitsTop && fitsRight) {\r\n        return \"topRight\";\r\n      } else if (fitsTop && fitsLeft) {\r\n        return \"topLeft\";\r\n      } else if (fitsBottom && fitsRight) {\r\n        return \"bottomRight\";\r\n      } else if (rightDistance > leftDistance) {\r\n        return \"mobileLeft\";\r\n      } else if (rightDistance < leftDistance) {\r\n        return \"mobileRight\";\r\n      } else if (fitsBottom && fitsLeft) {\r\n        return \"bottomLeft\";\r\n      } else {\r\n        return DEFAULT_POS;\r\n      }\r\n    };\r\n\r\n    setTooltipPos(getPosition());\r\n  }, [tooltipVisible, ...deps]);\r\n\r\n  const showTooltip = () => setTooltipVisible(true);\r\n  const hideTooltip = () => setTooltipVisible(false);\r\n\r\n  // TODO: consider memoizing this?\r\n  return {\r\n    anchorProps: {\r\n      ref: anchorRef,\r\n      onMouseEnter: showTooltip,\r\n      onMouseLeave: hideTooltip,\r\n    },\r\n    tooltipProps: { ref: tooltipRef, position: tooltipPos },\r\n    tooltipVisible,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}