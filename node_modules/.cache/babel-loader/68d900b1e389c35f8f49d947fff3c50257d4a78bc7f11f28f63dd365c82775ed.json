{"ast":null,"code":"import{config}from\"../config\";export const getTalentRank=(state,tree,talent)=>{return state[tree][talent];};export const getTalentData=(data,tree,talent)=>{return data[tree].talents[talent];};const getTreeTalents=(data,tree)=>{return data[tree].talents;};export const getTreeData=(data,tree)=>{return data[tree];};export const getTreePointsSpent=(state,tree)=>{const ranks=Object.values(state[tree]);return ranks.reduce((prev,rank)=>{return prev+rank;},0);};export const getPointsSpent=state=>{const treeNames=Object.keys(state);return treeNames.reduce((prev,treeName)=>{return prev+getTreePointsSpent(state,treeName);},0);};export const getPointsLeft=state=>{return config.TOTAL_POINTS-getPointsSpent(state);};export const isTalentMaxed=(state,data,tree,talent)=>{const talentRank=getTalentRank(state,tree,talent);const talentData=getTalentData(data,tree,talent);return talentRank===talentData.maxRank;};export const areReqPointsMet=(state,data,tree,talent)=>{const treePointsSpent=getTreePointsSpent(state,tree);const talentData=getTalentData(data,tree,talent);return treePointsSpent>=talentData.reqPoints;};export const isPrereqMet=(state,data,tree,talent)=>{const talentData=getTalentData(data,tree,talent);if(talentData.prereq){return isTalentMaxed(state,data,tree,talentData.prereq);}// TODO: returns true if there is no prereq, could cause problems\nreturn true;};// todo: doesn't consider if there are any remaining points\nexport const isTalentUnlocked=(state,data,tree,talent)=>{const prereqMet=isPrereqMet(state,data,tree,talent);const reqPointsMet=areReqPointsMet(state,data,tree,talent);return prereqMet&&reqPointsMet;};const getBasePoints=(state,data,tree,talent)=>{const{reqPoints}=getTalentData(data,tree,talent);// get talents which require less than or equal to these points,\n// sum their ranks\nreturn Object.entries(getTreeTalents(data,tree)).reduce((prev,_ref)=>{let[talentName,talentData]=_ref;if(talentData.reqPoints<=reqPoints){return prev+getTalentRank(state,tree,talentName);}return prev;},0);};export const getTalentDependents=(state,data,tree,talent)=>{const basePoints=getBasePoints(state,data,tree,talent);const treeTalents=getTreeTalents(data,tree);return Object.entries(treeTalents).reduce((prev,_ref2)=>{let[talentName,talentData]=_ref2;const rank=getTalentRank(state,tree,talentName);const{prereq}=talentData;if(talentData.reqPoints===basePoints&&rank>0){// if the talent has req equal to base points spent, therefore 1 less point and it would be illegal\nprev.push(talentName);}else if(prereq===talent&&rank>0){prev.push(talentName);}return prev;},[]);};","map":{"version":3,"names":["config","getTalentRank","state","tree","talent","getTalentData","data","talents","getTreeTalents","getTreeData","getTreePointsSpent","ranks","Object","values","reduce","prev","rank","getPointsSpent","treeNames","keys","treeName","getPointsLeft","TOTAL_POINTS","isTalentMaxed","talentRank","talentData","maxRank","areReqPointsMet","treePointsSpent","reqPoints","isPrereqMet","prereq","isTalentUnlocked","prereqMet","reqPointsMet","getBasePoints","entries","_ref","talentName","getTalentDependents","basePoints","treeTalents","_ref2","push"],"sources":["D:/Warcraft/AAW-Talent-Calculator-master/src/TalentContext/selectors.ts"],"sourcesContent":["import { State, TalentData } from \"./types\";\r\nimport { config } from \"../config\";\r\n\r\nexport const getTalentRank = (state: State, tree: string, talent: string) => {\r\n  return state[tree][talent];\r\n};\r\n\r\nexport const getTalentData = (\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  return data[tree].talents[talent];\r\n};\r\n\r\nconst getTreeTalents = (data: TalentData, tree: string) => {\r\n  return data[tree].talents;\r\n};\r\n\r\nexport const getTreeData = (data: TalentData, tree: string) => {\r\n  return data[tree];\r\n};\r\n\r\nexport const getTreePointsSpent = (state: State, tree: string) => {\r\n  const ranks = Object.values(state[tree]);\r\n  return ranks.reduce((prev, rank) => {\r\n    return prev + rank;\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsSpent = (state: State) => {\r\n  const treeNames = Object.keys(state);\r\n  return treeNames.reduce((prev, treeName) => {\r\n    return prev + getTreePointsSpent(state, treeName);\r\n  }, 0);\r\n};\r\n\r\nexport const getPointsLeft = (state: State) => {\r\n  return config.TOTAL_POINTS - getPointsSpent(state);\r\n};\r\n\r\nexport const isTalentMaxed = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentRank = getTalentRank(state, tree, talent);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return talentRank === talentData.maxRank;\r\n};\r\n\r\nexport const areReqPointsMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const treePointsSpent = getTreePointsSpent(state, tree);\r\n  const talentData = getTalentData(data, tree, talent);\r\n  return treePointsSpent >= talentData.reqPoints;\r\n};\r\n\r\nexport const isPrereqMet = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const talentData = getTalentData(data, tree, talent);\r\n  if (talentData.prereq) {\r\n    return isTalentMaxed(state, data, tree, talentData.prereq);\r\n  }\r\n  // TODO: returns true if there is no prereq, could cause problems\r\n  return true;\r\n};\r\n\r\n// todo: doesn't consider if there are any remaining points\r\nexport const isTalentUnlocked = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const prereqMet = isPrereqMet(state, data, tree, talent);\r\n  const reqPointsMet = areReqPointsMet(state, data, tree, talent);\r\n  return prereqMet && reqPointsMet;\r\n};\r\n\r\nconst getBasePoints = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const { reqPoints } = getTalentData(data, tree, talent);\r\n  // get talents which require less than or equal to these points,\r\n  // sum their ranks\r\n  return Object.entries(getTreeTalents(data, tree)).reduce(\r\n    (prev, [talentName, talentData]) => {\r\n      if (talentData.reqPoints <= reqPoints) {\r\n        return prev + getTalentRank(state, tree, talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    0,\r\n  );\r\n};\r\n\r\nexport const getTalentDependents = (\r\n  state: State,\r\n  data: TalentData,\r\n  tree: string,\r\n  talent: string,\r\n) => {\r\n  const basePoints = getBasePoints(state, data, tree, talent);\r\n  const treeTalents = getTreeTalents(data, tree);\r\n\r\n  return Object.entries(treeTalents).reduce<string[]>(\r\n    (prev, [talentName, talentData]) => {\r\n      const rank = getTalentRank(state, tree, talentName);\r\n      const { prereq } = talentData;\r\n\r\n      if (talentData.reqPoints === basePoints && rank > 0) {\r\n        // if the talent has req equal to base points spent, therefore 1 less point and it would be illegal\r\n        prev.push(talentName);\r\n      } else if (prereq === talent && rank > 0) {\r\n        prev.push(talentName);\r\n      }\r\n      return prev;\r\n    },\r\n    [],\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}